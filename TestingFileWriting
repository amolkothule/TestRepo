package com.amol.smstexttest;

import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.app.Activity;
import android.content.ContentResolver;
import android.telephony.SmsManager;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends Activity {

	static TextView TextViewStatisSMS;
	Button buttonSendText;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.activity_main);
		TextViewStatisSMS = (TextView) findViewById(R.id.TextViewStatisSMS);
		buttonSendText = (Button) findViewById(R.id.buttonSendText);
		buttonSendText.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				String messageToSend = "### this is a message ###";
				 String number = "9890603907";
				 SmsManager.getDefault().sendTextMessage(number, null, messageToSend, null,null);
			}
		});
		
		
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

}



======================


package com.amol.smstexttest;

import android.content.ContentResolver;
import android.content.Context;
import android.database.ContentObserver;
import android.database.Cursor;
import android.net.Uri;
import android.os.Handler;
import android.os.Message;
import android.util.Log;

public class SMSMonitor {
    private ServiceController mainActivity;
    private ContentResolver contentResolver = null;
    private Handler smshandler = null;
    private ContentObserver smsObserver = null;
    public String smsNumber= "";
    public static boolean thCountStatus = false;
    public static int thIncreCount = 0;
    public boolean monitorStatus = false;
    String code;
 //   Feedmanager fm = null;
    static public String activationCode;
    int smsCount = 0;

    public SMSMonitor(final ServiceController mainActivity, final Context mainContext) {
       this.mainActivity = mainActivity;
       contentResolver = mainActivity.getContentResolver();
       smshandler = new SMSHandler();
       smsObserver = new SMSObserver(smshandler);
    }

    public void startSMSMonitoring() {
       try {
          monitorStatus = false;
          if (!monitorStatus) {
             contentResolver.registerContentObserver(Uri
                   .parse("content://sms"), true, smsObserver);
          }
       } catch (Exception e) {
          Log.d("test","SMSMonitor :: startSMSMonitoring Exception == "+ e.getMessage());
       }
    }

    public void stopSMSMonitoring() {
       try {
          monitorStatus = false;
          if (!monitorStatus) {
             contentResolver.unregisterContentObserver(smsObserver);
          }
       } catch (Exception e) {
          Log.e("test","SMSMonitor :: stopSMSMonitoring Exception == "+ e.getMessage());
       }
    }

    class SMSHandler extends Handler {
       public void handleMessage(final Message msg) {
       }
    }

    class SMSObserver extends ContentObserver {
       private Handler sms_handle = null;
       public SMSObserver(final Handler smshandle) {
          super(smshandle);
          sms_handle = smshandle;
       }

       public void onChange(final boolean bSelfChange) {
          super.onChange(bSelfChange);
          Thread thread = new Thread() {
             public void run() {
                try {
                   monitorStatus = true;

                   // Send message to Activity
                   Message msg = new Message();
                   sms_handle.sendMessage(msg);
                   Uri uriSMSURI = Uri.parse("content://sms");
                   Cursor cur = mainActivity.getContentResolver().query(
                         uriSMSURI, null, null, null, "_id");

                   if (cur.getCount() != smsCount) {
                      smsCount = cur.getCount();

                      if (cur != null && cur.getCount() > 0) {
                         cur.moveToLast();
                         for (int i = 0; i < cur.getColumnCount(); i++) 
                         {
                            //Log("KidSafe","SMSMonitor :: incoming Column Name : " +
                               //cur.getColumnName(i));
                               //cur.getString(i));
                         }

                         smsNumber = cur.getString(cur.getColumnIndex("address"));
                         if (smsNumber == null || smsNumber.length() <= 0)
                         {
                            smsNumber = "Unknown";

                         }

                         int type = Integer.parseInt(cur.getString(cur.getColumnIndex("type")));
                         String message = cur.getString(cur.getColumnIndex("body"));
                         Log.d("test","SMSMonitor :: SMS type == " + type);
                         Log.d("test","SMSMonitor :: Message Txt == " + message);
                         Log.d("test","SMSMonitor :: Phone Number == " + smsNumber);

                         cur.close();

                         if (type == 1) {
                            onSMSReceive(message, smsNumber);
                         } else {
                            onSMSSend(message, smsNumber);
                         }
                      }
                   }
                   /*if (cur.getCount() < smsCount) {
                      Log("KidSafe","SMS Count last:: " + smsCount);
                      Log("KidSafe","SMS cur Count last:: " + cur.getCount());
                      smsCount = cur.getCount();
                      Log("KidSafe","SMS Count last:: " + smsCount);
                   }*/
                } catch (Exception e) {
//                   Log("KidSafe","SMSMonitor :: onChange Exception == "+ e.getMessage());
                }
             }
          };
          thread.start();
       }

       private void onSMSReceive(final String message, final String number) {
          synchronized (this) {
              Log.d("test", "In OnSmsReceive");
             Log.d("test", "Message"+message);
                                Log.d("Sample", "Number"+number);
          }
       }

       private void onSMSSend(final String message, final String number) {
          synchronized (this) {
              Log.d("test", "In OnSmsSend");
             Log.d("test", "Message"+message);
                                Log.d("Sample", "Number"+number);
          }
       }
    }
 }
 
 
 ========================
 
 
 package com.amol.smstexttest;

import java.util.Calendar;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.SmsMessage;
import android.util.Log;
import android.widget.Toast;

    public class SMSBroadcastReceiver extends BroadcastReceiver {

            private static final String SMS_RECEIVED = "android.provider.Telephony.SMS_RECEIVED";
            private static final String SMS_SEND = "android.permission.SEND_SMS";
            
            private static final String TAG = "SMSBroadcastReceiver";

            @Override
            public void onReceive(Context context, Intent intent) {
                 Log.i(TAG, "Intent recieved: " + intent.getAction());

                    if (intent.getAction().equals(SMS_RECEIVED)) {
                        Bundle bundle = intent.getExtras();
                        if (bundle != null) {
                            Object[] pdus = (Object[])bundle.get("pdus");
                            final SmsMessage[] messages = new SmsMessage[pdus.length];
                            for (int i = 0; i < pdus.length; i++) {
                                messages[i] = SmsMessage.createFromPdu((byte[])pdus[i]);
                            }
                            
                            Calendar calendar = Calendar.getInstance();
                            
                            if (messages.length > -1) {
                            	messages[0].getOriginatingAddress();
                                Toast.makeText(context, "Message recieved: " + messages[0].getMessageBody(), 7000).show();
                                calendar.setTimeInMillis(messages[0].getTimestampMillis());
                                
                                Log.i("########TIME########", ""
                                		+calendar.get(Calendar.DAY_OF_MONTH)+"-"
                                		+(calendar.get(Calendar.MONTH) + 1)+"-"
                                		+calendar.get(Calendar.YEAR)+"-"
                                		+(calendar.get(Calendar.HOUR_OF_DAY) + 1)+"-"
                                		+(calendar.get(Calendar.MINUTE) + 1)+"-"
                                		+(calendar.get(Calendar.SECOND) + 1)
                                		);
                                
                                Log.i("########PHONENUM########", messages[0].getOriginatingAddress());
                                Log.i("########MSG########", messages[0].getMessageBody());
                                MainActivity.TextViewStatisSMS.setText( messages[0].getMessageBody());
                            }
                        }
                    }else if(intent.getAction().equals(SMS_SEND)){
                    	 Log.i("###########", "GOT IT BOSS");
                    }
               }
        }
        
        
        
========================


package com.amol.smstexttest;

import android.app.Activity;
import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;

//for starting monitor create a service like below
public class ServiceController extends Service
{
   private Activity mainActivity;
   SMSMonitor sms;

   @Override
   public IBinder onBind(Intent intent) {

      return null;
   }

   public void onCreate() 
   {
      super.onCreate();

      /**** Start Listen to Outgoing SMS ****/
      Log.d("test","###### ServiceController :: CallSMS Monitor method ######");
      sms = new SMSMonitor(this , mainActivity);
      sms.startSMSMonitoring();
   }

   @Override
     public void onDestroy() {
        super.onDestroy();

        /**** Stop Listen to Outgoing SMS ****/
        Log.d("test","###### ServiceController :: StopSMS Monitor method ######");
        sms.stopSMSMonitoring();
    }
}



==============================

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.amol.smstexttest"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="8"
        android:targetSdkVersion="17" />

    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <uses-permission android:name="android.permission.SEND_SMS" />

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <activity
            android:name="com.amol.smstexttest.MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <receiver android:name="com.amol.smstexttest.SMSBroadcastReceiver" >
            <intent-filter>
                <action android:name="android.provider.Telephony.SMS_RECEIVED" >
                </action>
            </intent-filter>
        </receiver>

        <service
            android:name="com.amol.smstexttest.ServiceController"
            android:enabled="true"
            android:label="@string/app_name" >
        </service>
    </application>

</manifest>



